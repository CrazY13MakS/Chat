<UserControl x:Class="ChatClient.View.ChatControls.ConversationDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ChatClient.View.ChatControls"
             xmlns:behav="clr-namespace:ChatClient.View.ChatControls.Behaviors"
             xmlns:inf="clr-namespace:ChatClient.Infrastructure"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" x:Name="convDialog">
    <UserControl.Resources>
        <inf:ChatTypeToVisibilityConverter x:Key="cConv"/>
        <Style x:Key="MyFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid Margin="8">
                            <Ellipse
                    Name="r1"
                    Stroke="Black"
                    StrokeDashArray="2 2"
                    StrokeThickness="1"/>
                            <Border
                    Name="border"
                    Width="{TemplateBinding ActualWidth}"
                    Height="{TemplateBinding ActualHeight}"
                    BorderThickness="1"
                    CornerRadius="2"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CircleButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}"/>
            <Setter Property="Background" Value="#FF6DB4EF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}"/>
                            <TextBlock Text="Send" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Ellipse>
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.88" Color="#00000000"/>
                                        <GradientStop Offset="1" Color="#80000000"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse Margin="10" x:Name="highlightCircle" >
                                <Ellipse.Fill >
                                    <LinearGradientBrush >
                                        <GradientStop Offset="0" Color="#50FFFFFF"/>
                                        <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                        <GradientStop Offset="1" Color="#50FFFFFF"/>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="highlightCircle" Property="Fill">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                            <GradientStop Offset="0" Color="#50FFFFFF"/>
                                            <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                            <GradientStop Offset="1" Color="#50FFFFFF"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="content" Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="0.5" X="0.5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter  Property="Background" Value="Azure" />
                                <Setter  Property="BorderBrush" Value="DarkBlue" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter  Property="Background" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="replyTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="*"/>

                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Author}"/>
                <TextBlock Text="{Binding Body}" Grid.Column="1"/>
                <TextBlock Text="{Binding SendingTime}" Grid.Column="2"/>
            </Grid>
        </DataTemplate>


        <ControlTemplate x:Key="SentMessage" >
            <Border BorderBrush="DarkSlateBlue" Margin="20,10,0,0"  CornerRadius="10">
                <StackPanel Background="AliceBlue">
                    <TextBlock Text="{Binding Body}" TextWrapping="Wrap"/>
                    <TextBlock Text="{Binding LocalTime, StringFormat=G}" HorizontalAlignment="Right"/>
                </StackPanel>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="RecivedMessage" >
            <Border BorderBrush="DarkSlateBlue" Margin="0,10,20,0" Background="LightGray" CornerRadius="10">
                <StackPanel  >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter">
                            <i:InvokeCommandAction Command="{Binding DataContext.ReadMessageCommand,RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TextBlock Text="{Binding Author}"/>
                    <TextBlock Text="{Binding Body}" TextWrapping="Wrap"/>
                    <TextBlock Text="{Binding LocalTime, StringFormat=G}" HorizontalAlignment="Right"/>
                </StackPanel>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="SystemMessage" >
            <Border BorderBrush="DarkSlateBlue" Margin="10" Background="White" CornerRadius="10">
                <StackPanel  >
                    <TextBlock Text="{Binding Author}" TextAlignment="Center"/>
                    <TextBlock Text="{Binding Body}" TextWrapping="Wrap"/>
                    <TextBlock Text="{Binding LocalTime, StringFormat=G}" HorizontalAlignment="Right"/>
                </StackPanel>
            </Border>
        </ControlTemplate>
        <Style x:Key="MyListBoxItemStyle"
        TargetType="{x:Type ListBoxItem}">

            <Setter Property="Template"
          Value="{DynamicResource SentMessage}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}"
                  Value="AlreadyRead">
                    <Setter Property="Template"
              Value="{DynamicResource RecivedMessage}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}"
                  Value="Received">
                    <Setter Property="Template"
              Value="{DynamicResource RecivedMessage}" />
                </DataTrigger>

                <DataTrigger Binding="{Binding Status}"
                  Value="SystemMessage">
                    <Setter Property="Template"
              Value="{DynamicResource SystemMessage}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--<local:MessageDataTemplateSelector x:Key="messageTemplateSelector"></local:MessageDataTemplateSelector>-->
        <Style x:Key="btnVisb">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ConversationType}" Value="Dialog">
                    <Setter  Property="Button.Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="Azure">
        <Grid.RowDefinitions>
            <RowDefinition Height="64*"/>
            <RowDefinition Height="298*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition MinHeight="55"/>
        </Grid.RowDefinitions>
        <Grid>

            <TextBlock Text="{Binding Name}"/>
            <!--<ComboBox ItemsSource="{Binding ParticipantsLogin}" Margin="100,0,0,0" Width="200"></ComboBox>-->
            <ToggleButton Style="{StaticResource ResourceKey=btnVisb}"  Name="btnAddPart" Content="Add participants" Width="auto" Height="auto" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <Popup IsOpen="{Binding IsChecked, ElementName=btnAddPart}" StaysOpen="False" PopupAnimation="Slide" Placement="Mouse" x:Name="popupAddPart" >
                <Border Background="DarkSlateBlue">
                    <Grid Width="250" Height="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="10*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Login" HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Center"/>
                        <ComboBox x:Name="cbUserLogins" Grid.Column="1" ItemsSource="{Binding  DataContext.ParticipantsList,RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                        <Button Content="Add" Grid.Row="2" Grid.ColumnSpan="2"
                                VerticalAlignment="Center" HorizontalAlignment="Left" Margin="50,0,0,0"  Background="DarkOliveGreen"
                                Command="{Binding DataContext.AddPartisipantCommand,RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding ElementName=cbUserLogins,Path=SelectedItem}" >
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="btnAddPart" Storyboard.TargetProperty="IsChecked">
                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button Content="Cancel"  Grid.Row="2" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,50,0"  Background="DarkRed">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="btnAddPart" Storyboard.TargetProperty="IsChecked">
                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                    </Grid>
                </Border>
            </Popup>
        </Grid>
        <ListBox  Background="Azure" ItemsSource="{Binding Messages}" ItemContainerStyle="{StaticResource MyListBoxItemStyle}"  behav:ListBoxBehavior.ScrollOnNewItem="True"  Grid.Row="1">
        </ListBox>
        <GridSplitter Grid.Row="2" Height="2" Background="AliceBlue"/>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="50"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="20" BorderThickness="2" BorderBrush="Black" Background="White" >
                <TextBox BorderBrush="Transparent" x:Name="tbMessage" VerticalScrollBarVisibility="Auto" TextWrapping="WrapWithOverflow" Margin="5,7,10,7" 
                         Text="{Binding DataContext.Message,RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            <Button Grid.Column="1" Style="{StaticResource CircleButton}"  Command="{Binding DataContext.SendMessageCommand,RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding ElementName=convDialog,Path=DataContext}" Height="50"/>
        </Grid>
    </Grid>
</UserControl>
