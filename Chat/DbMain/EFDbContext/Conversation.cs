//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DbMain.EFDbContext
{
    using System;
    using System.Collections.Generic;
    
    public partial class Conversation
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Conversation()
        {
            this.ConversationTypeId = 1;
            this.Contacts = new HashSet<Contact>();
            this.ConversationMembers = new HashSet<ConversationMember>();
            this.ConversationReplies = new HashSet<ConversationReply>();
        }
    
        public long Id { get; set; }
        public long AuthorId { get; set; }
        public Nullable<long> PartnerId { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public System.DateTimeOffset Created { get; set; }
        public System.DateTimeOffset LastChange { get; set; }
        public byte[] Icon { get; set; }
        public int ConversationTypeId { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Contact> Contacts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ConversationMember> ConversationMembers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ConversationReply> ConversationReplies { get; set; }
        public virtual User User { get; set; }
        public virtual User User1 { get; set; }
        public virtual ConversationType ConversationType { get; set; }
    }
}
